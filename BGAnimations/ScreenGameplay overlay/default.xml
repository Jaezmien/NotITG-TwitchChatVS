<ActorFrame> <children>

	<Aux
		InitCommand="%function(self)
			TwitchChatVS.GameQueue = {}
			TwitchChatVS.ActivatedMods = {}  -- { when , mod string }
		end"
		OnCommand="sleep,1;queuecommand,Shit"
		ShitCommand="%function(self)

			if TwitchChatVS.EnableModVoting then
				External:add_buffer( TwitchChatVS.Flag, {2,1} ) -- Screen: Gameplay, Action: Enable Mod Voting
				External:add_hook( TwitchChatVS.Flag, 'mod voting', function(buffer)
					if buffer[1] ~= 2 then return end -- Screen: Gameplay
					if buffer[2] ~= 1 then return end -- Action: Add mod

					local mod_string = ''
					local mod_percent = 0

					mod_percent = buffer[3] * (buffer[4] == 1 and -1 or 1)

					local mod_string_buffer = {}
					for i=5,table.getn(buffer) do
						table.insert(mod_string_buffer, buffer[i]+1)
					end
					mod_string = External.decode( mod_string_buffer )

					table.insert( TwitchChatVS.GameQueue, { GAMESTATE:GetSongTime(), mod_percent, mod_string } )
				end )
			end

		end"
	/>

	<Aux
		OnCommand="queuecommand,Update"
		TwitchDisconnectMessageCommand="%function(self)
			SCREENMAN:SystemMessage('Console Disconnected')
			External:remove_hook( TwitchChatVS.Flag, 'mod voting' )
			GAMESTATE:ApplyGameCommand('screen,ScreenTitleMenu')
		end"
		UpdateCommand="%function(self)

			if TwitchChatVS.EnableModVoting then

				local b = GAMESTATE:GetSongTime()

				-- Adding mods from queue if there is a space
				if table.getn( TwitchChatVS.ActivatedMods ) <= TwitchChatVS.QueueLimit then

					local r = 0
					for i,v in pairs( TwitchChatVS.GameQueue ) do
						table.insert( TwitchChatVS.ActivatedMods ,v)
						--
						SCREENMAN:SystemMessage('Activated '.. v[2] ..'% '.. v[3] ..'!')
						--
						r=r+1
						if table.getn( TwitchChatVS.ActivatedMods ) > TwitchChatVS.QueueLimit then break end
					end

					for i=1,r do table.remove( TwitchChatVS.GameQueue ,1) end
					
				end

				-- Enabling mods
				GAMESTATE:ApplyModifiers('clearall, *-1 dizzyholds, *-1 reversetype, *-1 beatcap, *-1 approachtype, *-1 zbuffer, *-1 spiralholds')
				GAMESTATE:ApplyModifiers('*-1 '.. TwitchChatVS.SpeedMod ..'x')

				local t = {}
				for i,v in pairs( TwitchChatVS.ActivatedMods ) do
					-- {time_start, percent, mod}
					if b>=v[1] then

						if b<=v[1]+16 then

							GAMESTATE:ApplyModifiers('*1 '.. v[2] ..' '.. v[3])
							table.insert(t,v)

						end

					else
						table.insert(t,v)
					end

				end
				TwitchChatVS.ActivatedMods  = t

			end

			self:cmd('sleep,0.02;queuecommand,Update')
		end"
	/>

</children> </ActorFrame>

